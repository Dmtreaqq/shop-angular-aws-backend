service: aws-shop-backend

custom:
  stage: dev
  webpack:
    packager: 'yarn'
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      local:
        sources:
          - table: products
            sources: ['./src/assets/products-only.json']
          - table: stocks
            sources: ['./src/assets/stocks-only.json']

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  stage: ${self:custom.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt products.Arn
            - !GetAtt stocks.Arn

functions:
  getProductsList:
    handler: src/index.getAllProducts
    events:
      - http:
          path: /products
          method: GET
    environment:
      PRODUCTS_TABLE_NAME: products
      STOCKS_TABLE_NAME: stocks
  getProductsById:
    handler: src/index.getProductById
    events:
      - http:
          path: /products/{id}
          method: GET
    environment:
      PRODUCTS_TABLE_NAME: products
      STOCKS_TABLE_NAME: stocks
  createProduct:
    handler: src/index.createProductHandler
    events:
      - http:
          path: /products
          method: POST
    environment:
      PRODUCTS_TABLE_NAME: products
      STOCKS_TABLE_NAME: stocks
  catalogBatchProcess:
    handler: src/index.catalogBatchProcess
    events:
      - sqs:
          arn: !GetAtt catalogItemsQueue.Arn
          batchSize: 5
    environment:
      PRODUCTS_TABLE_NAME: products
      STOCKS_TABLE_NAME: stocks

resources:
  Resources:
    products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
